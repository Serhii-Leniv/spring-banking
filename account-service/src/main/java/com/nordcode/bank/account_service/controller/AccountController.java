package com.nordcode.bank.account_service.controller;import com.nordcode.bank.account_service.dto.AccountCreateRequestDto;import com.nordcode.bank.account_service.dto.AccountResponseDto;import com.nordcode.bank.account_service.dto.AccountUpdateRequestDto;import com.nordcode.bank.account_service.service.AccountService;import jakarta.validation.Valid;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/v1/accounts")public class AccountController {    private final AccountService accountService;    public AccountController(AccountService accountService) {        this.accountService = accountService;    }    @GetMapping    public ResponseEntity<List<AccountResponseDto>> getAll() {        return ResponseEntity.ok(accountService.findAllAccounts());    }    @GetMapping("/{id}")    public ResponseEntity<AccountResponseDto> getById(@PathVariable Long id) {        return ResponseEntity.ok(accountService.findAccountById(id));    }    @PostMapping    public ResponseEntity<AccountResponseDto> create(@Valid @RequestBody AccountCreateRequestDto dto) {        AccountResponseDto created = accountService.createAccount(dto);        return ResponseEntity.status(HttpStatus.CREATED).body(created);    }    @PutMapping("/{id}")    public ResponseEntity<AccountResponseDto> update(@PathVariable Long id,                                                     @Valid @RequestBody AccountUpdateRequestDto dto) {        AccountResponseDto updated = accountService.updateAccount(id, dto);        return ResponseEntity.ok(updated);    }    @DeleteMapping("/{id}")    public ResponseEntity<Void> delete(@PathVariable Long id) {        accountService.deleteAccount(id);        return ResponseEntity.noContent().build();    }}